rev	change
r1	Initial Commit
r2	Added Reamdme w/ citation
r3	Added Unit Tests for 'Meta' key
r3	Updated existing unit tests to test several meta scenarios 
r3	"RunAllTests()" method broken out into multiple tests
r4	Parser GetStringLiteral method checks for values values enclosed in single quotes ('....') (amend [r3])
r4	Parser GetCharLiteral returns the individual single-quote-enclosed character or a default value (amend [r3])
r4	Introduced concept of a 'Delayed' unit whose structure is not known until a later time
r4	Delayed units are recognizable by the Key being surrounded with curly braces i.e. {KEY}
r4	DistanceToNextSibling(...) private method added to Parser
r4	The entire (ccl) text of the Key / Value pair is stored as the string value
r4	When a Key is found to be for a 'delayed' unit the Parser will now advance to the next key that is at the same (or lower) indentation level
r4	Constructor now creates an 'IDelayedUnit' which stores the original ccl level for future back-denting
r4	The Delayed value *MUST* be of a record type (though it does not need to resolve to a reocrd type)
r4	The Delayed record *MUST* include a field called 'URL' which will hold a path that will be used to resolve the true value (TODO: [])
r4	The URL path may be interpolated by wrapping placeholder variables in curly braces (TODO: [])
r4	Placeholder values that appear in the URL *MUST* be accompanied by a field of the same name, to be used in the URL path in place of the variable (TODO: [])
r4	Created test for Delayed Unit
r5	Parser static methods Broken out to ParserHelpers
r5	Removed Parser.NextKeyLength() method to fix weird logic that was handling empty content scenario in Parser.ParseContent()
r5	IDelayedUnit decorated with IComplexUnit to allow Single-Value return from Constructor
r5	Parser.GetCharLiteral() and Parser.GetStringLiteral Moved to LiteralHelpers static class, now public
r5	ParserHelpers static class now containns all other static methods previously in Parser class
r5	Parser.ParseContent() now checks level of next key (GetNextLevel) and, if > 0 calls new Parser.BackDent() static method
r5	Parset.BackDent method gets level (n) of first key, removes (n) steps of indent from each key
r5	DelayedUnitTests TestLoadDelayedUnit converts delayed unit to a record and verifies the 'URL' field value
r5	DelayedUnitWhitespace runs above test with ignorable new lines and delimiters inserted ahead of the test tree
r6	NestedValue tests replaced '\0' in first test case dilimiter with '='
r6	Added const's for default values of Indent, IndentStep and Delimiter
r6	New Method Parser.GetEndOfMeta() 
r6	Parser.ParseContent code broken out into ParseContentInternal
r6	Parser.ParseContent() now calls ParseContentInternal starting at the end of meta by first calling GetEndOfMeta
r6	Parser.FromContent() now calls GetEndOfMeta and calls GetMetaParser with path and content up to the end of meta key-value
r6	Parser.GetMetaParser(path,content) overload calls ParseContentInternal to get meta unit which is then pased to orig. GetMetaParser(unit)
r6	ParserHelpers.DistanceToNextSibling() now public and renamed to GetDistanceToNextSibling
r6	GetDistanceToNextSibling parsing loop now using `bool first` technique rather than checking index, much simpler